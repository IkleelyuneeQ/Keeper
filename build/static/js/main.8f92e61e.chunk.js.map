{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","React","createElement","Footer","year","Date","getFullYear","Note","props","className","title","content","onClick","event","onDelete","id","CreateArea","note","setNote","useState","handleChange","name","value","target","prevValue","onChange","placeholder","rows","btnAdd","preventDefault","App","notes","setNotes","delteNote","prevNotes","filter","noteItem","index","newNote","map","key","ReactDOM","render","document","getElementById"],"mappings":"0MAUeA,MARf,WACE,OACEC,IAAAC,cAAA,cACED,IAAAC,cAAA,UAAI,YCMKC,MATf,WACE,MAAMC,GAAO,IAAIC,MAAOC,cACxB,OACEL,IAAAC,cAAA,cACED,IAAAC,cAAA,SAAG,oBAAaE,KCSPG,MAbf,SAAcC,GAIZ,OACEP,IAAAC,cAAA,OAAKO,UAAU,QACbR,IAAAC,cAAA,UAAKM,EAAME,OACXT,IAAAC,cAAA,SAAIM,EAAMG,SACVV,IAAAC,cAAA,UAAQU,QAPZ,SAAqBC,GACnBL,EAAMM,SAASN,EAAMO,MAMW,YCgDrBC,MAxDf,SAAoBR,GAWlB,MAAOS,EAAMC,GAAWC,mBAAS,CAC/BT,MAAO,GACPC,QAAS,KAEX,SAASS,EAAaP,GACpB,MAAM,KAAEQ,EAAI,MAAEC,GAAUT,EAAMU,OAC9BL,EAASM,IACA,IACFA,EACH,CAACH,GAAOC,KAcd,OACErB,IAAAC,cAAA,WACED,IAAAC,cAAA,YACED,IAAAC,cAAA,SACEmB,KAAK,QACLI,SAAUL,EACVE,MAAOL,EAAKP,MACZgB,YAAY,UAEdzB,IAAAC,cAAA,YACEmB,KAAK,UACLI,SAAUL,EACVE,MAAOL,EAAKN,QACZe,YAAY,iBACZC,KAAK,MAEP1B,IAAAC,cAAA,UAAQU,QAzBd,SAAoBC,GAClBL,EAAMoB,OAAOX,GACbJ,EAAMgB,iBACNX,EAAQ,CACNR,MAAO,GACPC,QAAS,OAoBsB,UCVtBmB,MApCf,WACE,MAAOC,EAAOC,GAAYb,mBAAS,IAQnC,SAASc,EAAUlB,GACjBiB,EAAUE,GACDA,EAAUC,OAAO,CAACC,EAAUC,IAC1BA,IAAUtB,IAIvB,OACEd,IAAAC,cAAA,WACED,IAAAC,cAACF,EAAM,MACPC,IAAAC,cAACc,EAAU,CAACY,OAhBhB,SAAiBU,GACfN,EAAUE,GACD,IAAIA,EAAWI,OAerBP,EAAMQ,IAAI,CAACH,EAAUC,IAElBpC,IAAAC,cAACK,EAAI,CACHO,SAAUmB,EACVO,IAAKH,EACLtB,GAAIsB,EACJ3B,MAAO0B,EAAS1B,MAChBC,QAASyB,EAASzB,WAIxBV,IAAAC,cAACC,EAAM,Q,OCjCbsC,EAASC,OAAOzC,IAAAC,cAAC4B,EAAG,MAAKa,SAASC,eAAe,W","file":"static/js/main.8f92e61e.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header>\n      <h1>Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      <p>Copyright â“’ {year}</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n\nfunction Note(props) {\n  function handleClick(event) {\n    props.onDelete(props.id);\n  }\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleClick}>DELETE</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState } from \"react\";\n\nfunction CreateArea(props) {\n  // const [title, setTitle] = useState(\"\");\n  // const [content, setContent] = useState(\"\");\n  // function handleChange(event) {\n  //   const { name, value } = event.target;\n  //   if (name === \"title\") {\n  //     setTitle(value);\n  //   } else {\n  //     setContent(value);\n  //   }\n  // }\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  function handleChange(event) {\n    const { name, value } = event.target;\n    setNote((prevValue) => {\n      return {\n        ...prevValue,\n        [name]: value,\n      };\n    });\n  }\n\n  function submitNote(event) {\n    props.btnAdd(note);\n    event.preventDefault();\n    setNote({\n      title: \"\",\n      content: \"\",\n    });\n  }\n\n  return (\n    <div>\n      <form>\n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n        />\n        <button onClick={submitNote}>Add</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n  }\n\n  function delteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((noteItem, index) => {\n        return index !== id;\n      });\n    });\n  }\n  return (\n    <div>\n      <Header />\n      <CreateArea btnAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            onDelete={delteNote}\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n\n//This is the end result you're aiming for:\n//https://pogqj.csb.app/\n"],"sourceRoot":""}